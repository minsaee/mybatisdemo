<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="join">
	<!-- association : 1:1의 관계의 JOIN명령을 처리하기 위해 사용된다 -->
	<resultMap type="part01.dto.EmployeesDTO"
		id="emp_dept_result" autoMapping="true">
		<!-- <result column="first_name" property="first_name"/> -->

		<association property="dept"
			javaType="part01.dto.DepartmentsDTO" autoMapping="true">
			<!-- <id column="department_id" property="department_id"/> <result column="department_name" 
				property="department_name"/> -->
		</association>
	</resultMap><!-- 아래 쿼리문의 결과값을 위의 resultMap에서 처리되도록 하는게 -->


	<select id="emp_dept" resultMap="emp_dept_result"> <!-- sql에서 미리해보고 ; 빼고 가져오기 -->
		SELECT e.employee_id,
		e.first_name, e.salary,e.hire_date
		,d.department_id, d.department_name
		FROM employees e, departments d
		WHERE e.department_id = d.department_id
		ORDER BY e.employee_id
	</select>

	<!--  collection 에서 1대 다수의 관계 -->
	<resultMap type = "part01.dto.DepartmentsDTO" 
		id ="dept_emp_result" autoMapping="true">
		<id column="department_id" property="department_id"/>
		<result column= "department_name" property="department_name"/>
		<collection property="empList" javaType="java.util.List" ofType="part01.dto.EmployeesDTO" autoMapping="true">


        <!--  <id column="employee_id" property="employee_id" />
         <result column="first_name" property="first_name" />
         <result column="salary" property="salary" /> -->

      </collection>
	</resultMap>


	<select id="dept_emp" resultMap="dept_emp_result">
		SELECT d.department_id, d.department_name,
		e.employee_id, e.first_name,
		e.salary, e.hire_date
		FROM departments d, employees e
		WHERE e.department_id = d.department_id
	</select>

</mapper>